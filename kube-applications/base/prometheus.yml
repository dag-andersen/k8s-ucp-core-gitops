apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    name: in-cluster
    namespace: prometheus
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 39.9.0
    chart: kube-prometheus-stack
    helm:
      skipCrds: true
      parameters:
      - name: pushgateway.enabled
        value: "false"
      - name: alertmanager.enabled
        value: "false"
      values: |
        extraScrapeConfigs: |
          - job_name: opencost
            honor_labels: true
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            dns_sd_configs:
            - names:
              - opencost.opencost
              type: 'A'
              port: 9003
        grafana:
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
              - name: Prometheus
                type: prometheus
                url: http://prometheus-kube-prometheus-prometheus:9090
                access: proxy
                isDefault: false
              - name: Loki
                type: loki
                access: proxy
                uid: loki
                editable: false
                url: http://loki.loki:3100
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-crds
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  destination:
    name: in-cluster
    namespace: prometheus
  project: default
  source:
    repoURL: https://github.com/prometheus-community/helm-charts.git
    path: charts/kube-prometheus-stack/crds/
    targetRevision: kube-prometheus-stack-39.9.0
    directory:
      recurse: true
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-extra
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/dag-andersen/visma-e-conomic-hiring
    targetRevision: HEAD
    path: ./k8s/prometheus
  destination:
    server: https://kubernetes.default.svc
    namespace: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated: {}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
spec:
  destination:
    name: in-cluster
    namespace: loki
  project: default
  source:
    repoURL: 'https://grafana.github.io/helm-charts'
    targetRevision: 2.9.9
    chart: loki-stack
    helm:
      skipCrds: true
      parameters:
      - name: pushgateway.enabled
        value: "false"
      - name: alertmanager.enabled
        value: "false"
      values: |
        loki:
          persistence:
            enabled: true
            size: 1Gi
          serviceMonitor:
            enabled: true
          config:
            query_scheduler:
              max_outstanding_requests_per_tenant: 4096
            frontend:
              max_outstanding_per_tenant: 4096
            query_range:
              parallelise_shardable_queries: true
            limits_config:
              split_queries_by_interval: 15m
              max_query_parallelism: 32
        # https://github.com/grafana/helm-charts/tree/main/charts/promtail
        promtail:
          config:
            lokiAddress: http://{{ .Release.Name }}-loki:3100/loki/api/v1/push
            snippets:
              pipelineStages:
                - cri: { }
                - docker: { }
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true